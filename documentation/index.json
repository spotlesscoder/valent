{"meta":{"ns":"Valent","version":"1","generator":"gi-docgen","generator-version":"2023.1"},"symbols":[{"type":"bitfield","name":"DeviceState","ctype":"ValentDeviceState","summary":"Device state flags."},{"type":"bitfield","name":"MediaActions","ctype":"ValentMediaActions","summary":"Media action flags."},{"type":"class","name":"Application","ctype":"ValentApplication","summary":"The primary application class of Valent.  #ValentApplication is ..."},{"type":"class","name":"ApplicationPlugin","ctype":"ValentApplicationPlugin","summary":"An abstract base class for application plugins.  #ValentApplicationPlugin ..."},{"type":"class","name":"Channel","ctype":"ValentChannel","summary":"A base class for device connections.  #ValentChannel is ..."},{"type":"class","name":"ChannelService","ctype":"ValentChannelService","summary":"An abstract base class for connection backends.  #ValentChannelService ..."},{"type":"class","name":"Clipboard","ctype":"ValentClipboard","summary":"A class for reading and writing the desktop clipboard. ..."},{"type":"class","name":"ClipboardAdapter","ctype":"ValentClipboardAdapter","summary":"An abstract base class for clipboard selections.  #ValentClipboardAdapter ..."},{"type":"class","name":"Component","ctype":"ValentComponent","summary":"An abstract base class for components.  #ValentComponent is ..."},{"type":"class","name":"ContactStore","ctype":"ValentContactStore","summary":"An abstract base class for address books.  #ValentContactStore ..."},{"type":"class","name":"Contacts","ctype":"ValentContacts","summary":"A class for managing address books.  #ValentContacts is ..."},{"type":"class","name":"ContactsAdapter","ctype":"ValentContactsAdapter","summary":"An abstract base class for address book providers.  ..."},{"type":"class","name":"Data","ctype":"ValentData","summary":"A class for a persistent storage context.  #ValentData ..."},{"type":"class","name":"Device","ctype":"ValentDevice","summary":"A class representing a remote device, such as a ..."},{"type":"class","name":"DeviceGadget","ctype":"ValentDeviceGadget","summary":"An abstract base class for device plugin gadgets.  ..."},{"type":"class","name":"DeviceManager","ctype":"ValentDeviceManager","summary":"A class for discovering and managing devices.  #ValentDeviceManager ..."},{"type":"class","name":"DevicePlugin","ctype":"ValentDevicePlugin","summary":"An abstract base class for device plugins.  #ValentDevicePlugin ..."},{"type":"class","name":"DevicePreferencesPage","ctype":"ValentDevicePreferencesPage","summary":"An abstract base class for device plugin preferences.  ..."},{"type":"class","name":"DeviceTransfer","ctype":"ValentDeviceTransfer","summary":"A class for device file transfers.  #ValentDeviceTransfer is ..."},{"type":"class","name":"Input","ctype":"ValentInput","summary":"A class for controlling pointer and keyboard devices.  ..."},{"type":"class","name":"InputAdapter","ctype":"ValentInputAdapter","summary":"An abstract base class for virtual input devices.  ..."},{"type":"class","name":"Media","ctype":"ValentMedia","summary":"A class for monitoring and controlling media players.  ..."},{"type":"class","name":"MediaAdapter","ctype":"ValentMediaAdapter","summary":"An abstract base class for media player adapters.  ..."},{"type":"class","name":"MediaPlayer","ctype":"ValentMediaPlayer","summary":"A base class for media players.  A #ValentMediaPlayer ..."},{"type":"class","name":"Mixer","ctype":"ValentMixer","summary":"A class for monitoring and controlling the system volume. ..."},{"type":"class","name":"MixerAdapter","ctype":"ValentMixerAdapter","summary":"An abstract base class for audio mixers.  #ValentMixerAdapter ..."},{"type":"class","name":"MixerStream","ctype":"ValentMixerStream","summary":"A base class for mixer streams.  #ValentMixerStream is ..."},{"type":"class","name":"Notification","ctype":"ValentNotification","summary":"A class representing a notification.  #ValentNotification is a ..."},{"type":"class","name":"Notifications","ctype":"ValentNotifications","summary":"A class for sending and receiving notifications.  #ValentNotifications ..."},{"type":"class","name":"NotificationsAdapter","ctype":"ValentNotificationsAdapter","summary":"An abstract base class for notification servers.  #ValentNotificationsAdapter ..."},{"type":"class","name":"Object","ctype":"ValentObject","summary":"A base class for objects.  #ValentObject is a ..."},{"type":"class","name":"PreferencesPage","ctype":"ValentPreferencesPage","summary":"An abstract base class for plugin preferences.  #ValentPreferencesPage ..."},{"type":"class","name":"Session","ctype":"ValentSession","summary":"A class for monitoring the session state.  #ValentSession ..."},{"type":"class","name":"SessionAdapter","ctype":"ValentSessionAdapter","summary":"An abstract base class for session managers.  #ValentSessionAdapter ..."},{"type":"class","name":"Transfer","ctype":"ValentTransfer","summary":"An abstract base class for data transfers.  #ValentTransfer ..."},{"type":"constant","name":"API_VERSION","ident":"VALENT_API_VERSION","summary":"The API version of libvalent, encoded as a string ..."},{"type":"constant","name":"ENABLE_DEBUG","ident":"VALENT_ENABLE_DEBUG","summary":"Whether debugging is enabled.  If %TRUE, the macros ..."},{"type":"constant","name":"ENABLE_TRACE","ident":"VALENT_ENABLE_TRACE","summary":"Whether tracing is enabled.  If %TRUE, the macros ..."},{"type":"constant","name":"LOG_LEVEL_TRACE","ident":"VALENT_LOG_LEVEL_TRACE","summary":"The #GLogLevelFlags log level for trace messages in Valent."},{"type":"constant","name":"MAJOR_VERSION","ident":"VALENT_MAJOR_VERSION","summary":"The major version component of libvalent (e.g. `1` if ..."},{"type":"constant","name":"MICRO_VERSION","ident":"VALENT_MICRO_VERSION","summary":"The micro version component of libvalent (e.g. `3` if ..."},{"type":"constant","name":"MINOR_VERSION","ident":"VALENT_MINOR_VERSION","summary":"The minor version component of libvalent (e.g. `2` if ..."},{"type":"constant","name":"POINTER_MIDDLE","ident":"VALENT_POINTER_MIDDLE","summary":"The middle button.  This is typically the button ..."},{"type":"constant","name":"POINTER_PRIMARY","ident":"VALENT_POINTER_PRIMARY","summary":"The primary button.  This is typically the left ..."},{"type":"constant","name":"POINTER_SECONDARY","ident":"VALENT_POINTER_SECONDARY","summary":"The primary button.  This is typically the right ..."},{"type":"constant","name":"VCS_TAG","ident":"VALENT_VCS_TAG","summary":"No description available."},{"type":"constant","name":"VERSION","ident":"VALENT_VERSION","summary":"The full version of libvalent, encoded as a string ..."},{"type":"content","name":"Protocol Reference","href":"protocol.html","summary":" # Protocol Reference  This reference is generated ..."},{"type":"ctor","name":"new","type_name":"Data","ident":"valent_data_new","summary":"Create a new #ValentData for @context."},{"type":"ctor","name":"new","type_name":"Device","ident":"valent_device_new","summary":"Create a new device for @id."},{"type":"ctor","name":"new","type_name":"Notification","ident":"valent_notification_new","summary":"Create a new #ValentNotification.  A notification without a ..."},{"type":"ctor","name":"new_finish","type_name":"DeviceManager","ident":"valent_device_manager_new_finish","summary":"Finish an operation started by [func@Valent.DeviceManager.new]."},{"type":"ctor","name":"new_for_file","type_name":"DeviceTransfer","ident":"valent_device_transfer_new_for_file","summary":"A convenience for creating a simple file transfer."},{"type":"ctor","name":"new_sync","type_name":"DeviceManager","ident":"valent_device_manager_new_sync","summary":"Create a new #ValentDeviceManager."},{"type":"domain","name":"PacketError","ctype":"ValentPacketError","summary":"Error enumeration for KDE Connect packet validation.  This ..."},{"type":"enum","name":"MediaRepeat","ctype":"ValentMediaRepeat","summary":"Enumeration of loop modes."},{"type":"enum","name":"MediaState","ctype":"ValentMediaState","summary":"Media state flags."},{"type":"enum","name":"MixerDirection","ctype":"ValentMixerDirection","summary":"Enumeration of stream directions."},{"type":"enum","name":"TransferState","ctype":"ValentTransferState","summary":"Enumeration of transfer states."},{"type":"function","name":"certificate_get_common_name","ident":"valent_certificate_get_common_name","summary":"Get the common name from @certificate, which by convention ..."},{"type":"function","name":"certificate_get_fingerprint","ident":"valent_certificate_get_fingerprint","summary":"Get a SHA256 fingerprint hash of @certificate."},{"type":"function","name":"certificate_get_public_key","ident":"valent_certificate_get_public_key","summary":"Get the public key of @certificate."},{"type":"function","name":"certificate_new","ident":"valent_certificate_new","summary":"Get a TLS certificate and private key pair.  ..."},{"type":"function","name":"certificate_new_finish","ident":"valent_certificate_new_finish","summary":"Finish an operation started by [func@Valent.certificate_new].  If either ..."},{"type":"function","name":"certificate_new_sync","ident":"valent_certificate_new_sync","summary":"Get a TLS certificate and private key pair.  ..."},{"type":"function","name":"check_version","ident":"valent_check_version","summary":"Run-time version check.  Evaluates to %TRUE if the ..."},{"type":"function","name":"debug_clear","ident":"valent_debug_clear","summary":"Shutdown logging for Valent.  This should be called ..."},{"type":"function","name":"debug_init","ident":"valent_debug_init","summary":"Initializes logging for Valent.  This should be called ..."},{"type":"function","name":"get_main_thread","ident":"valent_get_main_thread","summary":"Get the main thread.  Use the macro `VALENT_IS_MAIN_THREAD()` ..."},{"type":"function","name":"get_major_version","ident":"valent_get_major_version","summary":"Get the major version component of the Valent library. ..."},{"type":"function","name":"get_micro_version","ident":"valent_get_micro_version","summary":"Get the micro version component of the Valent library. ..."},{"type":"function","name":"get_minor_version","ident":"valent_get_minor_version","summary":"Get the minor version component of the Valent library. ..."},{"type":"function","name":"get_plugin_engine","ident":"valent_get_plugin_engine","summary":"Get the global #PeasEngine.  The first call to ..."},{"type":"function","name":"packet_check_field","ident":"valent_packet_check_field","summary":"Check @packet for @field and return %TRUE if present, ..."},{"type":"function","name":"packet_deserialize","ident":"valent_packet_deserialize","summary":"Convenience function that deserializes a KDE Connect packet from ..."},{"type":"function","name":"packet_dup_strv","ident":"valent_packet_dup_strv","summary":"Lookup @field in the body of @packet and return ..."},{"type":"function","name":"packet_end","ident":"valent_packet_end","summary":"Finish a packet created with [func@Valent.packet_init].  This function ..."},{"type":"function","name":"packet_error_quark","ident":"valent_packet_error_quark","summary":"No description available."},{"type":"function","name":"packet_from_stream","ident":"valent_packet_from_stream","summary":"Read a KDE Connect packet from an input stream. ..."},{"type":"function","name":"packet_get_array","ident":"valent_packet_get_array","summary":"Lookup @field in the body of @packet and assign ..."},{"type":"function","name":"packet_get_body","ident":"valent_packet_get_body","summary":"Convenience function for getting the packet body of a ..."},{"type":"function","name":"packet_get_boolean","ident":"valent_packet_get_boolean","summary":"Lookup @field in the body of @packet and assign ..."},{"type":"function","name":"packet_get_double","ident":"valent_packet_get_double","summary":"Lookup @field in the body of @packet and assign ..."},{"type":"function","name":"packet_get_id","ident":"valent_packet_get_id","summary":"Convenience function for getting the timestamp of a KDE ..."},{"type":"function","name":"packet_get_int","ident":"valent_packet_get_int","summary":"Lookup @field in the body of @packet and assign ..."},{"type":"function","name":"packet_get_object","ident":"valent_packet_get_object","summary":"Lookup @field in the body of @packet and assign ..."},{"type":"function","name":"packet_get_payload_full","ident":"valent_packet_get_payload_full","summary":"A convenience for retrieving the `payloadTransferInfo` and `payloadSize` fields ..."},{"type":"function","name":"packet_get_payload_info","ident":"valent_packet_get_payload_info","summary":"A convenience for retrieve the 'payloadTransferInfo` field from @packet."},{"type":"function","name":"packet_get_payload_size","ident":"valent_packet_get_payload_size","summary":"Get the `payloadSize` field of @packet in bytes."},{"type":"function","name":"packet_get_string","ident":"valent_packet_get_string","summary":"Lookup @field in the body of @packet and assign ..."},{"type":"function","name":"packet_get_type","ident":"valent_packet_get_type","summary":"Convenience function for getting the capability type of a ..."},{"type":"function","name":"packet_has_payload","ident":"valent_packet_has_payload","summary":"Return %TRUE if the packet holds valid transfer information. ..."},{"type":"function","name":"packet_init","ident":"valent_packet_init","summary":"Initialize a [class@Json.Builder] and KDE Connect packet.  Creates ..."},{"type":"function","name":"packet_new","ident":"valent_packet_new","summary":"A convenience function for creating a new KDE Connect ..."},{"type":"function","name":"packet_serialize","ident":"valent_packet_serialize","summary":"Convenience function that updates the timestamp of a packet ..."},{"type":"function","name":"packet_set_payload_full","ident":"valent_packet_set_payload_full","summary":"A convenience method for setting the `payloadTransferInfo` and `payloadSize` ..."},{"type":"function","name":"packet_set_payload_info","ident":"valent_packet_set_payload_info","summary":"A convenience method for setting the `payloadTransferInfo` field on @packet."},{"type":"function","name":"packet_set_payload_size","ident":"valent_packet_set_payload_size","summary":"Set the `payloadSize` field of @packet to @size."},{"type":"function","name":"packet_to_stream","ident":"valent_packet_to_stream","summary":"A convenience function for writing a packet to a connection."},{"type":"function","name":"packet_validate","ident":"valent_packet_validate","summary":"Check if @packet is a well-formed KDE Connect packet."},{"type":"function","name":"string_to_markup","ident":"valent_string_to_markup","summary":"Add markup to text for recognized elements.  This ..."},{"type":"function","name":"timestamp_ms","ident":"valent_timestamp_ms","summary":"Get a current UNIX epoch timestamp in milliseconds.  ..."},{"type":"function","name":"ui_get_resource","ident":"valent_ui_get_resource","summary":"No description available."},{"type":"function_macro","name":"CHECK_VERSION","ident":"VALENT_CHECK_VERSION","summary":"Compile-time version check.  Evaluates to %TRUE if the ..."},{"type":"function_macro","name":"FIXME","ident":"VALENT_FIXME","summary":"Appends to the log that unstable code has been reached."},{"type":"function_macro","name":"GOTO","ident":"VALENT_GOTO","summary":"Traces the jump to a label in a function. ..."},{"type":"function_macro","name":"JSON","ident":"VALENT_JSON","summary":"Logs @_node as pretty-printed JSON at %G_LOG_LEVEL_DEBUG, prefixed with ..."},{"type":"function_macro","name":"NOTE","ident":"VALENT_NOTE","summary":"Logs a formatted message at %G_LOG_LEVEL_DEBUG."},{"type":"function_macro","name":"RETURN","ident":"VALENT_RETURN","summary":"Traces the exit from a function. Use this instead ..."},{"type":"function_macro","name":"TODO","ident":"VALENT_TODO","summary":"Appends to the log that incomplete code has been reached."},{"type":"method","name":"activate","type_name":"ApplicationPlugin","ident":"valent_application_plugin_activate","summary":"Handle activation of the application.  Implementations should override ..."},{"type":"method","name":"add_button","type_name":"Notification","ident":"valent_notification_add_button","summary":"Add a notification button."},{"type":"method","name":"add_button_with_target","type_name":"Notification","ident":"valent_notification_add_button_with_target","summary":"Add a notification button."},{"type":"method","name":"add_contact","type_name":"ContactStore","ident":"valent_contact_store_add_contact","summary":"A convenience wrapper around [method@Valent.ContactStore.add_contacts] for adding a single ..."},{"type":"method","name":"add_contacts","type_name":"ContactStore","ident":"valent_contact_store_add_contacts","summary":"Add @contacts to @store.  Call [method@Valent.ContactStore.add_contacts_finish] to get ..."},{"type":"method","name":"add_contacts_finish","type_name":"ContactStore","ident":"valent_contact_store_add_contacts_finish","summary":"Finish an operation started by [method@Valent.ContactStore.add_contact] or [method@Valent.ContactStore.add_contacts]."},{"type":"method","name":"add_menu_entries","type_name":"DevicePlugin","ident":"valent_device_plugin_add_menu_entries","summary":"A convenience function for creating multiple [class@Gio.MenuItem] instances and ..."},{"type":"method","name":"add_notification","type_name":"NotificationsAdapter","ident":"valent_notifications_adapter_add_notification","summary":"Send @notification to the @adapter."},{"type":"method","name":"attach_cancellable","type_name":"Object","ident":"valent_object_attach_cancellable","summary":"Attach the object's cancellable another cancellable.  This connects ..."},{"type":"method","name":"build_identity","type_name":"ChannelService","ident":"valent_channel_service_build_identity","summary":"Rebuild the local KDE Connect identity packet.  This ..."},{"type":"method","name":"cancel","type_name":"Transfer","ident":"valent_transfer_cancel","summary":"Cancel the transfer operation.  If this is called ..."},{"type":"method","name":"chain_cancellable","type_name":"Object","ident":"valent_object_chain_cancellable","summary":"Chain a cancellable to the object's cancellable.  This ..."},{"type":"method","name":"changed","type_name":"ClipboardAdapter","ident":"valent_clipboard_adapter_changed","summary":"Emits [signal@Valent.ClipboardAdapter::changed] signal on @adapter.  The default handler ..."},{"type":"method","name":"channel","type_name":"ChannelService","ident":"valent_channel_service_channel","summary":"Emit [signal@Valent.ChannelService::channel] on @service.  This method should only ..."},{"type":"method","name":"check_status","type_name":"Transfer","ident":"valent_transfer_check_status","summary":"Check the transfer status.  Returns %TRUE if the ..."},{"type":"method","name":"clear_cache","type_name":"Data","ident":"valent_data_clear_cache","summary":"Clear cache data.  The method will remove all ..."},{"type":"method","name":"clear_data","type_name":"Data","ident":"valent_data_clear_data","summary":"Delete all files in the cache, config and data ..."},{"type":"method","name":"close","type_name":"Channel","ident":"valent_channel_close","summary":"Close the channel."},{"type":"method","name":"close_async","type_name":"Channel","ident":"valent_channel_close_async","summary":"Close the channel asynchronously.  Call [method@Valent.Channel.close_finish] to get ..."},{"type":"method","name":"close_finish","type_name":"Channel","ident":"valent_channel_close_finish","summary":"Finish an operation started by [method@Valent.Channel.close_async]."},{"type":"method","name":"command_line","type_name":"ApplicationPlugin","ident":"valent_application_plugin_command_line","summary":"Handle the given command-line options.  Implementations should override ..."},{"type":"method","name":"contact_added","type_name":"ContactStore","ident":"valent_contact_store_contact_added","summary":"Emits [signal@Valent.ContactStore::contact-added] signal on @store.  This method should ..."},{"type":"method","name":"contact_removed","type_name":"ContactStore","ident":"valent_contact_store_contact_removed","summary":"Emits [signal@Valent.ContactStore::contact-removed] on @store.  This method should only ..."},{"type":"method","name":"create_cache_file","type_name":"Data","ident":"valent_data_create_cache_file","summary":"Create a new cache file.  This method creates ..."},{"type":"method","name":"create_config_file","type_name":"Data","ident":"valent_data_create_config_file","summary":"Create a new config file.  This method creates ..."},{"type":"method","name":"create_data_file","type_name":"Data","ident":"valent_data_create_data_file","summary":"Create a new data file.  This method creates ..."},{"type":"method","name":"destroy","type_name":"Object","ident":"valent_object_destroy","summary":"Destroy the object.  If called from the main ..."},{"type":"method","name":"disable","type_name":"ApplicationPlugin","ident":"valent_application_plugin_disable","summary":"Disable the plugin.  Implementations should override this method ..."},{"type":"method","name":"disable","type_name":"DevicePlugin","ident":"valent_device_plugin_disable","summary":"Disable the plugin.  This function is called when ..."},{"type":"method","name":"download","type_name":"Channel","ident":"valent_channel_download","summary":"Open an auxiliary connection, usually to download data.  ..."},{"type":"method","name":"download_async","type_name":"Channel","ident":"valent_channel_download_async","summary":"Open an auxiliary connection, usually to download data.  ..."},{"type":"method","name":"download_finish","type_name":"Channel","ident":"valent_channel_download_finish","summary":"Finish an operation started with [method@Valent.Channel.download_async]."},{"type":"method","name":"dup_id","type_name":"ChannelService","ident":"valent_channel_service_dup_id","summary":"Get the local ID."},{"type":"method","name":"dup_id","type_name":"Transfer","ident":"valent_transfer_dup_id","summary":"Get the transfer ID."},{"type":"method","name":"enable","type_name":"ApplicationPlugin","ident":"valent_application_plugin_enable","summary":"Enable the plugin.  Implementations should override this method ..."},{"type":"method","name":"enable","type_name":"DevicePlugin","ident":"valent_device_plugin_enable","summary":"Enable the plugin.  This function is called when ..."},{"type":"method","name":"ensure_store","type_name":"Contacts","ident":"valent_contacts_ensure_store","summary":"Get a #ValentContactStore for @uid.  If the contact ..."},{"type":"method","name":"equal","type_name":"Notification","ident":"valent_notification_equal","summary":"Compare two notifications for equality by ID."},{"type":"method","name":"execute","type_name":"Transfer","ident":"valent_transfer_execute","summary":"Start the transfer operation.  Get the result with ..."},{"type":"method","name":"execute_finish","type_name":"Transfer","ident":"valent_transfer_execute_finish","summary":"Finish an operation started by [method@Valent.Transfer.execute]."},{"type":"method","name":"export","type_name":"DeviceManager","ident":"valent_device_manager_export","summary":"Export the manager on D-Bus.  Calling this method ..."},{"type":"method","name":"export_player","type_name":"Media","ident":"valent_media_export_player","summary":"Export @player on all adapters that support it."},{"type":"method","name":"export_player","type_name":"MediaAdapter","ident":"valent_media_adapter_export_player","summary":"Export @player on @adapter.  This method is intended ..."},{"type":"method","name":"get_active","type_name":"Session","ident":"valent_session_get_active","summary":"Get the active state of the primary [class@Valent.SessionAdapter]."},{"type":"method","name":"get_active","type_name":"SessionAdapter","ident":"valent_session_adapter_get_active","summary":"Get whether the session is active."},{"type":"method","name":"get_application","type_name":"ApplicationPlugin","ident":"valent_application_plugin_get_application","summary":"Get the application this plugin is bound to."},{"type":"method","name":"get_application","type_name":"Notification","ident":"valent_notification_get_application","summary":"Get the notifying application."},{"type":"method","name":"get_applications","type_name":"Notifications","ident":"valent_notifications_get_applications","summary":"Get a dictionary of applications that are known to ..."},{"type":"method","name":"get_body","type_name":"Notification","ident":"valent_notification_get_body","summary":"Get the notification body."},{"type":"method","name":"get_cache_path","type_name":"Data","ident":"valent_data_get_cache_path","summary":"Get the path to the cache directory."},{"type":"method","name":"get_config_path","type_name":"Data","ident":"valent_data_get_config_path","summary":"Get the path to the config directory."},{"type":"method","name":"get_contact","type_name":"ContactStore","ident":"valent_contact_store_get_contact","summary":"Get a contact by UID.  Call [method@Valent.ContactStore.get_contact_finish] to ..."},{"type":"method","name":"get_contact_finish","type_name":"ContactStore","ident":"valent_contact_store_get_contact_finish","summary":"Finish an operation started by valent_contact_store_get_contact()."},{"type":"method","name":"get_contacts","type_name":"ContactStore","ident":"valent_contact_store_get_contacts","summary":"A convenience wrapper around [method@Valent.ContactStore.query] for searching contacts by ..."},{"type":"method","name":"get_context","type_name":"Data","ident":"valent_data_get_context","summary":"Get the context."},{"type":"method","name":"get_data_path","type_name":"Data","ident":"valent_data_get_data_path","summary":"Get the path to the data directory."},{"type":"method","name":"get_default_input","type_name":"Mixer","ident":"valent_mixer_get_default_input","summary":"Get the default input stream for the primary [class@Valent.MixerAdapter]."},{"type":"method","name":"get_default_input","type_name":"MixerAdapter","ident":"valent_mixer_adapter_get_default_input","summary":"Get the default input stream for @adapter."},{"type":"method","name":"get_default_output","type_name":"Mixer","ident":"valent_mixer_get_default_output","summary":"Get the default output stream for the primary [class@Valent.MixerAdapter]."},{"type":"method","name":"get_default_output","type_name":"MixerAdapter","ident":"valent_mixer_adapter_get_default_output","summary":"Get the default output stream for @adapter."},{"type":"method","name":"get_description","type_name":"MixerStream","ident":"valent_mixer_stream_get_description","summary":"Get the human-readable label of @stream."},{"type":"method","name":"get_device","type_name":"DevicePlugin","ident":"valent_device_plugin_get_device","summary":"Get the device this plugin is bound to."},{"type":"method","name":"get_device_manager","type_name":"ApplicationPlugin","ident":"valent_application_plugin_get_device_manager","summary":"Get the [class@Valent.DeviceManager] of the application."},{"type":"method","name":"get_direction","type_name":"MixerStream","ident":"valent_mixer_stream_get_direction","summary":"Get the port direction of @stream."},{"type":"method","name":"get_flags","type_name":"MediaPlayer","ident":"valent_media_player_get_flags","summary":"Get flags describing the available actions of @player."},{"type":"method","name":"get_icon","type_name":"Notification","ident":"valent_notification_get_icon","summary":"Get the notification icon."},{"type":"method","name":"get_icon_name","type_name":"Device","ident":"valent_device_get_icon_name","summary":"Get the symbolic icon name."},{"type":"method","name":"get_id","type_name":"Device","ident":"valent_device_get_id","summary":"Get the unique ID."},{"type":"method","name":"get_id","type_name":"Notification","ident":"valent_notification_get_id","summary":"Get the notification ID."},{"type":"method","name":"get_identity","type_name":"Channel","ident":"valent_channel_get_identity","summary":"Get the local identity packet."},{"type":"method","name":"get_inputs","type_name":"Mixer","ident":"valent_mixer_get_inputs","summary":"Get a list of all the input streams being ..."},{"type":"method","name":"get_inputs","type_name":"MixerAdapter","ident":"valent_mixer_adapter_get_inputs","summary":"Get a list of the input streams managed by @adapter."},{"type":"method","name":"get_level","type_name":"MixerStream","ident":"valent_mixer_stream_get_level","summary":"Get the level of @stream (eg. speaker volume, microphone ..."},{"type":"method","name":"get_locked","type_name":"Session","ident":"valent_session_get_locked","summary":"Get the locked state of the primary [class@Valent.SessionAdapter]."},{"type":"method","name":"get_locked","type_name":"SessionAdapter","ident":"valent_session_adapter_get_locked","summary":"Get whether the session is locked."},{"type":"method","name":"get_menu","type_name":"Device","ident":"valent_device_get_menu","summary":"Get the [class@Gio.MenuModel] of the device.  Plugins may ..."},{"type":"method","name":"get_metadata","type_name":"MediaPlayer","ident":"valent_media_player_get_metadata","summary":"Get the metadata of the active media items.  ..."},{"type":"method","name":"get_mimetypes","type_name":"Clipboard","ident":"valent_clipboard_get_mimetypes","summary":"Get the mime-types of the primary clipboard content."},{"type":"method","name":"get_mimetypes","type_name":"ClipboardAdapter","ident":"valent_clipboard_adapter_get_mimetypes","summary":"Get the mime-types of the current clipboard content."},{"type":"method","name":"get_muted","type_name":"MixerStream","ident":"valent_mixer_stream_get_muted","summary":"Get the muted state of @stream.  Implementations that ..."},{"type":"method","name":"get_name","type_name":"ChannelService","ident":"valent_channel_service_get_name","summary":"Get the local display name."},{"type":"method","name":"get_name","type_name":"ContactStore","ident":"valent_contact_store_get_name","summary":"Get the display name of @store."},{"type":"method","name":"get_name","type_name":"Device","ident":"valent_device_get_name","summary":"Get the display name of the device."},{"type":"method","name":"get_name","type_name":"DeviceManager","ident":"valent_device_manager_get_name","summary":"Get the display name of the local device."},{"type":"method","name":"get_name","type_name":"MediaPlayer","ident":"valent_media_player_get_name","summary":"Get the display name of the @player."},{"type":"method","name":"get_name","type_name":"MixerStream","ident":"valent_mixer_stream_get_name","summary":"Get the unique name of @stream."},{"type":"method","name":"get_outputs","type_name":"Mixer","ident":"valent_mixer_get_outputs","summary":"Get a list of all the output streams being ..."},{"type":"method","name":"get_outputs","type_name":"MixerAdapter","ident":"valent_mixer_adapter_get_outputs","summary":"Get a list of the output streams managed by @adapter."},{"type":"method","name":"get_parent","type_name":"Data","ident":"valent_data_get_parent","summary":"Get the parent [class@Valent.Data].  If %NULL is returned, ..."},{"type":"method","name":"get_peer_identity","type_name":"Channel","ident":"valent_channel_get_peer_identity","summary":"Get the peer identity packet."},{"type":"method","name":"get_players","type_name":"MediaAdapter","ident":"valent_media_adapter_get_players","summary":"Gets a new #GPtrArray containing a list of #ValentMediaPlayer ..."},{"type":"method","name":"get_plugins","type_name":"Device","ident":"valent_device_get_plugins","summary":"Get a list of the loaded plugins."},{"type":"method","name":"get_position","type_name":"MediaPlayer","ident":"valent_media_player_get_position","summary":"Get the current position in seconds."},{"type":"method","name":"get_priority","type_name":"Notification","ident":"valent_notification_get_priority","summary":"Get the notification priority."},{"type":"method","name":"get_progress","type_name":"Transfer","ident":"valent_transfer_get_progress","summary":"Get the transfer progress."},{"type":"method","name":"get_repeat","type_name":"MediaPlayer","ident":"valent_media_player_get_repeat","summary":"Get the repeat mode for @player."},{"type":"method","name":"get_settings","type_name":"DevicePlugin","ident":"valent_device_plugin_get_settings","summary":"Get the settings for this plugin."},{"type":"method","name":"get_settings","type_name":"DevicePreferencesPage","ident":"valent_device_preferences_page_get_settings","summary":"Get the [class@Gio.Settings] for the [class@Valent.DevicePlugin]."},{"type":"method","name":"get_shuffle","type_name":"MediaPlayer","ident":"valent_media_player_get_shuffle","summary":"Get whether playback order is shuffled."},{"type":"method","name":"get_source","type_name":"ContactStore","ident":"valent_contact_store_get_source","summary":"Get the #ESource backing @store."},{"type":"method","name":"get_state","type_name":"Device","ident":"valent_device_get_state","summary":"Get the state of the device."},{"type":"method","name":"get_state","type_name":"MediaPlayer","ident":"valent_media_player_get_state","summary":"Get the playback state for @player."},{"type":"method","name":"get_state","type_name":"Transfer","ident":"valent_transfer_get_state","summary":"Get the transfer state."},{"type":"method","name":"get_stores","type_name":"ContactsAdapter","ident":"valent_contacts_adapter_get_stores","summary":"Get a list of the contact stores known to @adapter."},{"type":"method","name":"get_time","type_name":"Notification","ident":"valent_notification_get_time","summary":"Get the notification time."},{"type":"method","name":"get_timestamp","type_name":"Clipboard","ident":"valent_clipboard_get_timestamp","summary":"Get the timestamp of the current clipboard content, in ..."},{"type":"method","name":"get_timestamp","type_name":"ClipboardAdapter","ident":"valent_clipboard_adapter_get_timestamp","summary":"Get the timestamp of the current clipboard content.  ..."},{"type":"method","name":"get_title","type_name":"Notification","ident":"valent_notification_get_title","summary":"Get the notification title."},{"type":"method","name":"get_uid","type_name":"ContactStore","ident":"valent_contact_store_get_uid","summary":"Get the UID of @store."},{"type":"method","name":"get_verification_key","type_name":"Channel","ident":"valent_channel_get_verification_key","summary":"Get a verification key for the connection.  Implementations ..."},{"type":"method","name":"get_volume","type_name":"MediaPlayer","ident":"valent_media_player_get_volume","summary":"Get the volume level."},{"type":"method","name":"handle_packet","type_name":"DevicePlugin","ident":"valent_device_plugin_handle_packet","summary":"Handle a packet from the device the plugin is ..."},{"type":"method","name":"hash","type_name":"Notification","ident":"valent_notification_hash","summary":"Converts a notification to a hash value, using g_str_hash() ..."},{"type":"method","name":"hide_notification","type_name":"DevicePlugin","ident":"valent_device_plugin_hide_notification","summary":"A convenience for withdrawing a notification.  This method ..."},{"type":"method","name":"identify","type_name":"ChannelService","ident":"valent_channel_service_identify","summary":"Identify the host device to the network.  This ..."},{"type":"method","name":"in_destruction","type_name":"Object","ident":"valent_object_in_destruction","summary":"Get whether the object is destroyed or in destruction."},{"type":"method","name":"keyboard_keysym","type_name":"Input","ident":"valent_input_keyboard_keysym","summary":"Press or release @keysym."},{"type":"method","name":"keyboard_keysym","type_name":"InputAdapter","ident":"valent_input_adapter_keyboard_keysym","summary":"Press or release @keysym."},{"type":"method","name":"lock","type_name":"Object","ident":"valent_object_lock","summary":"Acquire a lock on @object.  Call [method@Valent.Object.unlock] to ..."},{"type":"method","name":"next","type_name":"MediaPlayer","ident":"valent_media_player_next","summary":"Skip to the next media item.  If there ..."},{"type":"method","name":"notification_added","type_name":"NotificationsAdapter","ident":"valent_notifications_adapter_notification_added","summary":"Emit [signal@Valent.NotificationsAdapter::notification-added] on @adapter.  This method should only ..."},{"type":"method","name":"notification_removed","type_name":"NotificationsAdapter","ident":"valent_notifications_adapter_notification_removed","summary":"Emit [signal@Valent.NotificationsAdapter::notification-removed] on @adapter.  This method should only ..."},{"type":"method","name":"notify","type_name":"Object","ident":"valent_object_notify","summary":"Emit [signal@GObject.Object::notify] on @object, on the main thread.  ..."},{"type":"method","name":"notify_by_pspec","type_name":"Object","ident":"valent_object_notify_by_pspec","summary":"Emit [signal@GObject.Object::notify] on @object, on the main thread.  ..."},{"type":"method","name":"open","type_name":"ApplicationPlugin","ident":"valent_application_plugin_open","summary":"Open the given files.  Implementations should override this ..."},{"type":"method","name":"pause","type_name":"Media","ident":"valent_media_pause","summary":"Pause any playing media players. Any player whose playback ..."},{"type":"method","name":"pause","type_name":"MediaPlayer","ident":"valent_media_player_pause","summary":"Pauses playback.  If playback is already paused, this ..."},{"type":"method","name":"play","type_name":"MediaPlayer","ident":"valent_media_player_play","summary":"Start playback.  If already playing, this has no ..."},{"type":"method","name":"play_pause","type_name":"MediaPlayer","ident":"valent_media_player_play_pause","summary":"Start or pause playback, depending on the current state. ..."},{"type":"method","name":"player_added","type_name":"MediaAdapter","ident":"valent_media_adapter_player_added","summary":"Emit [signal@Valent.MediaAdapter::player-added] on @adapter.  This method should only ..."},{"type":"method","name":"player_removed","type_name":"MediaAdapter","ident":"valent_media_adapter_player_removed","summary":"Emit [signal@Valent.MediaAdapter::player-removed] on @adapter.  This method should only ..."},{"type":"method","name":"pointer_axis","type_name":"Input","ident":"valent_input_pointer_axis","summary":"Scroll the surface under the pointer (@dx, @dy), relative ..."},{"type":"method","name":"pointer_axis","type_name":"InputAdapter","ident":"valent_input_adapter_pointer_axis","summary":"Scroll the surface under the pointer (@dx, @dy), relative ..."},{"type":"method","name":"pointer_button","type_name":"Input","ident":"valent_input_pointer_button","summary":"Press or release @button."},{"type":"method","name":"pointer_button","type_name":"InputAdapter","ident":"valent_input_adapter_pointer_button","summary":"Press or release @button."},{"type":"method","name":"pointer_motion","type_name":"Input","ident":"valent_input_pointer_motion","summary":"Move the pointer (@dx, @dy), relative to its current position."},{"type":"method","name":"pointer_motion","type_name":"InputAdapter","ident":"valent_input_adapter_pointer_motion","summary":"Move the pointer (@dx, @dy), relative to its current ..."},{"type":"method","name":"previous","type_name":"MediaPlayer","ident":"valent_media_player_previous","summary":"Skip to the previous media item.  If there ..."},{"type":"method","name":"query","type_name":"ContactStore","ident":"valent_contact_store_query","summary":"Query @store for contacts matching @query.  Call [method@Valent.ContactStore.query_finish] ..."},{"type":"method","name":"query_finish","type_name":"ContactStore","ident":"valent_contact_store_query_finish","summary":"Finish an operation started by [method@Valent.ContactStore.query]."},{"type":"method","name":"queue_packet","type_name":"Device","ident":"valent_device_queue_packet","summary":"Queue a KDE Connect packet to be sent to ..."},{"type":"method","name":"queue_packet","type_name":"DevicePlugin","ident":"valent_device_plugin_queue_packet","summary":"Queue a KDE Connect packet to be sent to ..."},{"type":"method","name":"read_bytes","type_name":"Clipboard","ident":"valent_clipboard_read_bytes","summary":"Get the content of the primary clipboard adapter.  ..."},{"type":"method","name":"read_bytes","type_name":"ClipboardAdapter","ident":"valent_clipboard_adapter_read_bytes","summary":"Get the content of @adapter.  Call [method@Valent.ClipboardAdapter.read_bytes_finish] to ..."},{"type":"method","name":"read_bytes_finish","type_name":"Clipboard","ident":"valent_clipboard_read_bytes_finish","summary":"Finish an operation started by [method@Valent.Clipboard.read_bytes]."},{"type":"method","name":"read_bytes_finish","type_name":"ClipboardAdapter","ident":"valent_clipboard_adapter_read_bytes_finish","summary":"Finish an operation started by [method@Valent.ClipboardAdapter.read_bytes]."},{"type":"method","name":"read_packet","type_name":"Channel","ident":"valent_channel_read_packet","summary":"Read the next KDE Connect packet from @channel.  ..."},{"type":"method","name":"read_packet_finish","type_name":"Channel","ident":"valent_channel_read_packet_finish","summary":"Finish an operation started by [method@Valent.Channel.read_packet]."},{"type":"method","name":"read_text","type_name":"Clipboard","ident":"valent_clipboard_read_text","summary":"Get the text content of the primary clipboard adapter. ..."},{"type":"method","name":"read_text","type_name":"ClipboardAdapter","ident":"valent_clipboard_adapter_read_text","summary":"Get the text content of @adapter.  Call [method@Valent.ClipboardAdapter.read_text_finish] ..."},{"type":"method","name":"read_text_finish","type_name":"Clipboard","ident":"valent_clipboard_read_text_finish","summary":"Finish an operation started by [method@Valent.Clipboard.read_text]."},{"type":"method","name":"read_text_finish","type_name":"ClipboardAdapter","ident":"valent_clipboard_adapter_read_text_finish","summary":"Finish an operation started by [method@Valent.ClipboardAdapter.read_text]."},{"type":"method","name":"ref_base_stream","type_name":"Channel","ident":"valent_channel_ref_base_stream","summary":"Get the base [class@Gio.IOStream]."},{"type":"method","name":"ref_cancellable","type_name":"Object","ident":"valent_object_ref_cancellable","summary":"Get a [class@Gio.Cancellable] for the object."},{"type":"method","name":"ref_channel","type_name":"Device","ident":"valent_device_ref_channel","summary":"Get the active channel."},{"type":"method","name":"ref_data","type_name":"Device","ident":"valent_device_ref_data","summary":"Get the data context for the device."},{"type":"method","name":"ref_device","type_name":"DeviceTransfer","ident":"valent_device_transfer_ref_device","summary":"Get the [class@Valent.Device]."},{"type":"method","name":"ref_file","type_name":"DeviceTransfer","ident":"valent_device_transfer_ref_file","summary":"Get the local [iface@Gio.File]."},{"type":"method","name":"ref_identity","type_name":"ChannelService","ident":"valent_channel_service_ref_identity","summary":"Get the local identity packet."},{"type":"method","name":"ref_packet","type_name":"DeviceTransfer","ident":"valent_device_transfer_ref_packet","summary":"Get the KDE Connect packet."},{"type":"method","name":"refresh","type_name":"DeviceManager","ident":"valent_device_manager_refresh","summary":"Refresh the available devices.  This method calls [method@Valent.ChannelService.identify] ..."},{"type":"method","name":"remove_contact","type_name":"ContactStore","ident":"valent_contact_store_remove_contact","summary":"Remove contact @uid from @store.  A convenience wrapper ..."},{"type":"method","name":"remove_contacts","type_name":"ContactStore","ident":"valent_contact_store_remove_contacts","summary":"Remove contact @uid from @store.  Call [method@Valent.ContactStore.remove_contacts_finish] to ..."},{"type":"method","name":"remove_contacts_finish","type_name":"ContactStore","ident":"valent_contact_store_remove_contacts_finish","summary":"Finish an operation started by [method@Valent.ContactStore.remove_contact] or [method@Valent.ContactStore.remove_contacts]."},{"type":"method","name":"remove_menu_entries","type_name":"DevicePlugin","ident":"valent_device_plugin_remove_menu_entries","summary":"A counterpart to [method@Valent.DevicePlugin.add_menu_entries]."},{"type":"method","name":"remove_notification","type_name":"NotificationsAdapter","ident":"valent_notifications_adapter_remove_notification","summary":"Withdraw @id from @adapter."},{"type":"method","name":"replace_menu_item","type_name":"DevicePlugin","ident":"valent_device_plugin_replace_menu_item","summary":"Replace an item in the top-level of the device ..."},{"type":"method","name":"seek","type_name":"MediaPlayer","ident":"valent_media_player_seek","summary":"Seek in the current media item by @offset seconds. ..."},{"type":"method","name":"send_packet","type_name":"Device","ident":"valent_device_send_packet","summary":"Send a KDE Connect packet to the device.  ..."},{"type":"method","name":"send_packet_finish","type_name":"Device","ident":"valent_device_send_packet_finish","summary":"Finish an operation started by [method@Valent.Device.send_packet]."},{"type":"method","name":"serialize","type_name":"Notification","ident":"valent_notification_serialize","summary":"Serialize the notification into a variant of type `a{sv}`."},{"type":"method","name":"set_action","type_name":"Notification","ident":"valent_notification_set_action","summary":"Sets the default notification action.  @action may be ..."},{"type":"method","name":"set_action_and_target","type_name":"Notification","ident":"valent_notification_set_action_and_target","summary":"Set the default notification action.  If @target is ..."},{"type":"method","name":"set_application","type_name":"Notification","ident":"valent_notification_set_application","summary":"Set the notifying application."},{"type":"method","name":"set_body","type_name":"Notification","ident":"valent_notification_set_body","summary":"Set the notification body."},{"type":"method","name":"set_default_input","type_name":"Mixer","ident":"valent_mixer_set_default_input","summary":"Set the default input stream for the primary [class@Valent.MixerAdapter]."},{"type":"method","name":"set_default_input","type_name":"MixerAdapter","ident":"valent_mixer_adapter_set_default_input","summary":"Set the default input stream for @adapter to @stream."},{"type":"method","name":"set_default_output","type_name":"Mixer","ident":"valent_mixer_set_default_output","summary":"Set the default output stream for the primary [class@Valent.MixerAdapter]."},{"type":"method","name":"set_default_output","type_name":"MixerAdapter","ident":"valent_mixer_adapter_set_default_output","summary":"Set the default output stream for @adapter to @stream."},{"type":"method","name":"set_icon","type_name":"Notification","ident":"valent_notification_set_icon","summary":"Set the notification icon."},{"type":"method","name":"set_id","type_name":"Notification","ident":"valent_notification_set_id","summary":"Set the notification ID."},{"type":"method","name":"set_level","type_name":"MixerStream","ident":"valent_mixer_stream_set_level","summary":"Set the level of @stream (eg. speaker volume, microphone ..."},{"type":"method","name":"set_locked","type_name":"Session","ident":"valent_session_set_locked","summary":"Set the locked state of the primary [class@Valent.SessionAdapter]."},{"type":"method","name":"set_locked","type_name":"SessionAdapter","ident":"valent_session_adapter_set_locked","summary":"Set whether the session is locked."},{"type":"method","name":"set_muted","type_name":"MixerStream","ident":"valent_mixer_stream_set_muted","summary":"Set the muted state of @stream.  Implementations that ..."},{"type":"method","name":"set_name","type_name":"ChannelService","ident":"valent_channel_service_set_name","summary":"Set the local display name."},{"type":"method","name":"set_name","type_name":"ContactStore","ident":"valent_contact_store_set_name","summary":"Set the display name of @store to @name."},{"type":"method","name":"set_name","type_name":"DeviceManager","ident":"valent_device_manager_set_name","summary":"Set the display name of the local device to @name."},{"type":"method","name":"set_position","type_name":"MediaPlayer","ident":"valent_media_player_set_position","summary":"Set the current position in seconds."},{"type":"method","name":"set_priority","type_name":"Notification","ident":"valent_notification_set_priority","summary":"Set the notification priority."},{"type":"method","name":"set_progress","type_name":"Transfer","ident":"valent_transfer_set_progress","summary":"Set the transfer progress.  This method should only ..."},{"type":"method","name":"set_repeat","type_name":"MediaPlayer","ident":"valent_media_player_set_repeat","summary":"Set the repeat mode of @player to @repeat."},{"type":"method","name":"set_shuffle","type_name":"MediaPlayer","ident":"valent_media_player_set_shuffle","summary":"Set whether playback order is shuffled."},{"type":"method","name":"set_time","type_name":"Notification","ident":"valent_notification_set_time","summary":"Set the notification time."},{"type":"method","name":"set_title","type_name":"Notification","ident":"valent_notification_set_title","summary":"Set the notification title."},{"type":"method","name":"set_volume","type_name":"MediaPlayer","ident":"valent_media_player_set_volume","summary":"Set the volume level of @player."},{"type":"method","name":"show_notification","type_name":"DevicePlugin","ident":"valent_device_plugin_show_notification","summary":"A convenience for showing a local notification.  @id ..."},{"type":"method","name":"start","type_name":"DeviceManager","ident":"valent_device_manager_start","summary":"Start managing devices.  Calling this method causes @manager ..."},{"type":"method","name":"stop","type_name":"DeviceManager","ident":"valent_device_manager_stop","summary":"Stop managing devices.  Calling this method causes @manager ..."},{"type":"method","name":"stop","type_name":"MediaPlayer","ident":"valent_media_player_stop","summary":"Stop playback.  If playback is already stopped, this ..."},{"type":"method","name":"store_added","type_name":"ContactsAdapter","ident":"valent_contacts_adapter_store_added","summary":"Emit [signal@Valent.ContactsAdapter::store-added] on @adapter.  This method should only ..."},{"type":"method","name":"store_data","type_name":"Channel","ident":"valent_channel_store_data","summary":"Store channel metadata.  This method is called to ..."},{"type":"method","name":"store_removed","type_name":"ContactsAdapter","ident":"valent_contacts_adapter_store_removed","summary":"Emit [signal@Valent.ContactsAdapter::store-removed] on @adapter.  This method should only ..."},{"type":"method","name":"stream_added","type_name":"MixerAdapter","ident":"valent_mixer_adapter_stream_added","summary":"Emit [signal@Valent.MixerAdapter::stream-added] on @adapter.  This method should only ..."},{"type":"method","name":"stream_removed","type_name":"MixerAdapter","ident":"valent_mixer_adapter_stream_removed","summary":"Emit [signal@Valent.MixerAdapter::stream-removed] on @adapter.  This method should only ..."},{"type":"method","name":"toggle_actions","type_name":"DevicePlugin","ident":"valent_device_plugin_toggle_actions","summary":"Enable or disable all actions.  Set the [property@Gio.Action:enabled] ..."},{"type":"method","name":"unexport","type_name":"DeviceManager","ident":"valent_device_manager_unexport","summary":"Unexport the manager from D-Bus.  Calling this method ..."},{"type":"method","name":"unexport_player","type_name":"Media","ident":"valent_media_unexport_player","summary":"Unexport @player from all adapters that support it."},{"type":"method","name":"unexport_player","type_name":"MediaAdapter","ident":"valent_media_adapter_unexport_player","summary":"Unexport @player from @adapter."},{"type":"method","name":"unlock","type_name":"Object","ident":"valent_object_unlock","summary":"Release a lock on @object.  The lock must ..."},{"type":"method","name":"unpause","type_name":"Media","ident":"valent_media_unpause","summary":"Unpause any media players we previously paused."},{"type":"method","name":"update_state","type_name":"DevicePlugin","ident":"valent_device_plugin_update_state","summary":"Update the plugin based on the new state of ..."},{"type":"method","name":"upload","type_name":"Channel","ident":"valent_channel_upload","summary":"Accept an auxiliary connection, usually to upload data.  ..."},{"type":"method","name":"upload_async","type_name":"Channel","ident":"valent_channel_upload_async","summary":"Accept an auxiliary connection, usually to upload data.  ..."},{"type":"method","name":"upload_finish","type_name":"Channel","ident":"valent_channel_upload_finish","summary":"Finish an operation started with [method@Valent.Channel.upload_async]."},{"type":"method","name":"write_bytes","type_name":"Clipboard","ident":"valent_clipboard_write_bytes","summary":"Set the content of the primary clipboard adapter.  ..."},{"type":"method","name":"write_bytes","type_name":"ClipboardAdapter","ident":"valent_clipboard_adapter_write_bytes","summary":"Set the content of the clipboard.  Call [method@Valent.ClipboardAdapter.write_bytes_finish] ..."},{"type":"method","name":"write_bytes_finish","type_name":"Clipboard","ident":"valent_clipboard_write_bytes_finish","summary":"Finish an operation started by [method@Valent.Clipboard.write_bytes]."},{"type":"method","name":"write_bytes_finish","type_name":"ClipboardAdapter","ident":"valent_clipboard_adapter_write_bytes_finish","summary":"Finish an operation started by [method@Valent.ClipboardAdapter.write_bytes]."},{"type":"method","name":"write_packet","type_name":"Channel","ident":"valent_channel_write_packet","summary":"Send a packet over the channel.  Internally [class@Valent.Channel] ..."},{"type":"method","name":"write_packet_finish","type_name":"Channel","ident":"valent_channel_write_packet_finish","summary":"Finish an operation started by [method@Valent.Channel.write_packet]."},{"type":"method","name":"write_text","type_name":"Clipboard","ident":"valent_clipboard_write_text","summary":"Set the text content of the primary clipboard adapter. ..."},{"type":"method","name":"write_text","type_name":"ClipboardAdapter","ident":"valent_clipboard_adapter_write_text","summary":"Set the text content of the clipboard.  Call ..."},{"type":"method","name":"write_text_finish","type_name":"Clipboard","ident":"valent_clipboard_write_text_finish","summary":"Finish an operation started by [method@Valent.Clipboard.write_text]."},{"type":"method","name":"write_text_finish","type_name":"ClipboardAdapter","ident":"valent_clipboard_adapter_write_text_finish","summary":"Finish an operation started by [method@Valent.ClipboardAdapter.write_text]."},{"type":"property","name":"action","type_name":"Notification","summary":"The default notification action."},{"type":"property","name":"active","type_name":"Session","summary":"Whether the session is active."},{"type":"property","name":"active","type_name":"SessionAdapter","summary":"Whether the session is active."},{"type":"property","name":"application","type_name":"ApplicationPlugin","summary":"The [class@Gio.Application] this plugin is bound to."},{"type":"property","name":"application","type_name":"Notification","summary":"The notifying application.  The semantics of this property ..."},{"type":"property","name":"base-stream","type_name":"Channel","summary":"The base [class@Gio.IOStream] for the channel.  Implementations of ..."},{"type":"property","name":"body","type_name":"Notification","summary":"The notification body."},{"type":"property","name":"cancellable","type_name":"Object","summary":"The object [class@Gio.Cancellable].  A #GCancellable that can be ..."},{"type":"property","name":"context","type_name":"Data","summary":"The specific context for this #ValentData.  For example, ..."},{"type":"property","name":"data","type_name":"ChannelService","summary":"The data context."},{"type":"property","name":"data","type_name":"Device","summary":"The data context.  This provides a relative point ..."},{"type":"property","name":"default-input","type_name":"Mixer","summary":"The active input stream."},{"type":"property","name":"default-input","type_name":"MixerAdapter","summary":"The active input stream.  Implementations should emit [signal@GObject.Object::notify] ..."},{"type":"property","name":"default-output","type_name":"Mixer","summary":"The active output stream."},{"type":"property","name":"default-output","type_name":"MixerAdapter","summary":"The active output stream.  Implementations should emit [signal@GObject.Object::notify] ..."},{"type":"property","name":"description","type_name":"MixerStream","summary":"The human-readable label of the stream.  Implementation may ..."},{"type":"property","name":"device","type_name":"DeviceGadget","summary":"The [class@Valent.Device] this gadget is for."},{"type":"property","name":"device","type_name":"DevicePlugin","summary":"The [class@Valent.Device] this plugin is bound to."},{"type":"property","name":"device","type_name":"DeviceTransfer","summary":"The [class@Valent.Device] this transfer is for."},{"type":"property","name":"device-id","type_name":"DevicePreferencesPage","summary":"The ID of the [class@Valent.Device] the plugin is bound to."},{"type":"property","name":"device-manager","type_name":"ApplicationPlugin","summary":"The [class@Valent.DeviceManager] this plugin is bound to."},{"type":"property","name":"direction","type_name":"MixerStream","summary":"The port direction of the stream."},{"type":"property","name":"file","type_name":"DeviceTransfer","summary":"The local [iface@Gio.File].  If this a download, then ..."},{"type":"property","name":"flags","type_name":"MediaPlayer","summary":"The available actions.  Implementations should emit [signal@GObject.Object::notify] when ..."},{"type":"property","name":"icon","type_name":"Notification","summary":"The notification [iface@Gio.Icon]."},{"type":"property","name":"icon-name","type_name":"Device","summary":"A symbolic icon name for the device.  See [property@Valent.Device:type]."},{"type":"property","name":"id","type_name":"ChannelService","summary":"The local ID.  This is the ID used ..."},{"type":"property","name":"id","type_name":"Device","summary":"A unique ID for the device.  By convention, ..."},{"type":"property","name":"id","type_name":"Notification","summary":"The unique ID of the notification."},{"type":"property","name":"id","type_name":"Transfer","summary":"A unique identifier for the transfer.  If not ..."},{"type":"property","name":"identity","type_name":"Channel","summary":"The local identity packet.  This is the identity ..."},{"type":"property","name":"identity","type_name":"ChannelService","summary":"The local identity packet.  This is the identity ..."},{"type":"property","name":"level","type_name":"MixerStream","summary":"The input or output level of the stream."},{"type":"property","name":"locked","type_name":"Session","summary":"Whether the session is locked."},{"type":"property","name":"locked","type_name":"SessionAdapter","summary":"Whether the session is locked."},{"type":"property","name":"metadata","type_name":"MediaPlayer","summary":"The metadata of the active media item.  The ..."},{"type":"property","name":"muted","type_name":"MixerStream","summary":"Whether the stream is muted."},{"type":"property","name":"name","type_name":"ChannelService","summary":"The local display name.  This is the user-visible ..."},{"type":"property","name":"name","type_name":"ContactStore","summary":"The display name."},{"type":"property","name":"name","type_name":"Device","summary":"A display name for the device."},{"type":"property","name":"name","type_name":"DeviceManager","summary":"The display name of the local device."},{"type":"property","name":"name","type_name":"MediaPlayer","summary":"The display name of the media player.  Typically, ..."},{"type":"property","name":"name","type_name":"MixerStream","summary":"The unique name of the stream."},{"type":"property","name":"packet","type_name":"DeviceTransfer","summary":"The KDE Connect packet describing the payload."},{"type":"property","name":"parent","type_name":"Data","summary":"The parent context.  If given during construction the ..."},{"type":"property","name":"peer-identity","type_name":"Channel","summary":"The peer identity packet.  This is the identity ..."},{"type":"property","name":"plugin-context","type_name":"Component","summary":"The domain of the component.  This is a ..."},{"type":"property","name":"plugin-info","type_name":"ApplicationPlugin","summary":"The [struct@Peas.PluginInfo] describing this plugin."},{"type":"property","name":"plugin-info","type_name":"ChannelService","summary":"The [struct@Peas.PluginInfo] describing this channel service."},{"type":"property","name":"plugin-info","type_name":"ClipboardAdapter","summary":"The [struct@Peas.PluginInfo] describing this adapter."},{"type":"property","name":"plugin-info","type_name":"ContactsAdapter","summary":"The [struct@Peas.PluginInfo] describing this adapter."},{"type":"property","name":"plugin-info","type_name":"DevicePlugin","summary":"The [struct@Peas.PluginInfo] describing this plugin."},{"type":"property","name":"plugin-info","type_name":"DevicePreferencesPage","summary":"The [struct@Peas.PluginInfo] describing this plugin."},{"type":"property","name":"plugin-info","type_name":"InputAdapter","summary":"The [struct@Peas.PluginInfo] describing this adapter."},{"type":"property","name":"plugin-info","type_name":"MediaAdapter","summary":"The [struct@Peas.PluginInfo] describing this adapter."},{"type":"property","name":"plugin-info","type_name":"MixerAdapter","summary":"The [struct@Peas.PluginInfo] describing this adapter."},{"type":"property","name":"plugin-info","type_name":"NotificationsAdapter","summary":"The [struct@Peas.PluginInfo] describing this adapter."},{"type":"property","name":"plugin-info","type_name":"PreferencesPage","summary":"The [struct@Peas.PluginInfo] describing the plugin this page configures."},{"type":"property","name":"plugin-info","type_name":"SessionAdapter","summary":"The [struct@Peas.PluginInfo] describing this adapter."},{"type":"property","name":"plugin-priority","type_name":"Component","summary":"The priority key for the component.  This is ..."},{"type":"property","name":"plugin-type","type_name":"Component","summary":"The extension point [alias@GLib.Type]."},{"type":"property","name":"plugins","type_name":"Device","summary":"A list of loaded plugin names."},{"type":"property","name":"position","type_name":"MediaPlayer","summary":"The current track position in seconds.  Acceptable values ..."},{"type":"property","name":"priority","type_name":"Notification","summary":"The notification priority."},{"type":"property","name":"progress","type_name":"Transfer","summary":"The progress of the transfer.  This value will ..."},{"type":"property","name":"repeat","type_name":"MediaPlayer","summary":"The repeat mode.  If the player does not ..."},{"type":"property","name":"settings","type_name":"DevicePlugin","summary":"The [class@Gio.Settings] for this plugin."},{"type":"property","name":"settings","type_name":"DevicePreferencesPage","summary":"The [class@Gio.Settings] for the [class@Valent.DevicePlugin]."},{"type":"property","name":"shuffle","type_name":"MediaPlayer","summary":"Whether playback order is shuffled.  A value of ..."},{"type":"property","name":"source","type_name":"ContactStore","summary":"The store [class@EDataServer.Source]."},{"type":"property","name":"state","type_name":"Device","summary":"The state of the device."},{"type":"property","name":"state","type_name":"MediaPlayer","summary":"The playback state.  Implementations should emit [signal@GObject.Object::notify] when ..."},{"type":"property","name":"state","type_name":"Transfer","summary":"The [enum@Valent.TransferState] of the transfer.  The value will ..."},{"type":"property","name":"time","type_name":"Notification","summary":"The posting time of the notification in milliseconds."},{"type":"property","name":"title","type_name":"Notification","summary":"The title of the notification"},{"type":"property","name":"type","type_name":"Device","summary":"A string hint, indicating the form-factor of the device. ..."},{"type":"property","name":"uid","type_name":"ContactStore","summary":"The unique identifier."},{"type":"property","name":"volume","type_name":"MediaPlayer","summary":"The volume level.  Attempts to change this property ..."},{"type":"record","name":"MenuEntry","ctype":"ValentMenuEntry","summary":"No description available."},{"type":"signal","name":"changed","type_name":"Clipboard","summary":"Emitted when the content of the primary [class@Valent.ClipboardAdapter] changes."},{"type":"signal","name":"changed","type_name":"ClipboardAdapter","summary":"Emitted when the content of @adapter changes.  The ..."},{"type":"signal","name":"changed","type_name":"Session","summary":"Emitted when the state of the primary [class@Valent.SessionAdapter] changes."},{"type":"signal","name":"channel","type_name":"ChannelService","summary":"Emitted when a new channel has been negotiated.  ..."},{"type":"signal","name":"contact-added","type_name":"ContactStore","summary":"Emitted when an [class@EBookContacts.Contact] is added to @store."},{"type":"signal","name":"contact-removed","type_name":"ContactStore","summary":"Emitted when an [class@EBookContacts.Contact] is removed from @store."},{"type":"signal","name":"destroy","type_name":"Object","summary":"Emitted when the object is being destroyed.  This ..."},{"type":"signal","name":"notification-added","type_name":"Notifications","summary":"Emitted when a notification is added to a [class@Valent.NotificationsAdapter]."},{"type":"signal","name":"notification-added","type_name":"NotificationsAdapter","summary":"Emitted when a [class@Valent.Notification] is added to @adapter.  ..."},{"type":"signal","name":"notification-removed","type_name":"Notifications","summary":"Emitted when a notification is removed from a [class@Valent.NotificationsAdapter]."},{"type":"signal","name":"notification-removed","type_name":"NotificationsAdapter","summary":"Emitted when a [class@Valent.Notification] is removed from @adapter.  ..."},{"type":"signal","name":"player-added","type_name":"MediaAdapter","summary":"Emitted when a [class@Valent.MediaPlayer] has been added to @adapter. ..."},{"type":"signal","name":"player-changed","type_name":"Media","summary":"Emitted when the state of a [class@Valent.MediaPlayer] has changed."},{"type":"signal","name":"player-removed","type_name":"MediaAdapter","summary":"Emitted when a [class@Valent.MediaPlayer] has been removed from @adapter. ..."},{"type":"signal","name":"player-seeked","type_name":"Media","summary":"Emitted when the playback position of a [class@Valent.MediaPlayer] has ..."},{"type":"signal","name":"store-added","type_name":"ContactsAdapter","summary":"Emitted when a [class@Valent.ContactStore] has been added to @adapter. ..."},{"type":"signal","name":"store-removed","type_name":"ContactsAdapter","summary":"Emitted when a [class@Valent.ContactStore] has been removed from @adapter. ..."},{"type":"signal","name":"stream-added","type_name":"MixerAdapter","summary":"Emitted when a new stream is added to @adapter. ..."},{"type":"signal","name":"stream-removed","type_name":"MixerAdapter","summary":"Emitted when a stream is removed from @adapter.  ..."},{"type":"type_func","name":"add_device_button","type_name":"Notification","ident":"valent_notification_add_device_button","summary":"Add an action button to @notification. @action is wrapped ..."},{"type":"type_func","name":"create_settings","type_name":"Component","ident":"valent_component_create_settings","summary":"Create a [class@Gio.Settings] for an extension.  A convenience ..."},{"type":"type_func","name":"create_settings","type_name":"DevicePlugin","ident":"valent_device_plugin_create_settings","summary":"A convenience function for plugins to create a [class@Gio.Settings] ..."},{"type":"type_func","name":"deserialize","type_name":"Notification","ident":"valent_notification_deserialize","summary":"Deserializes @variant into a #ValentNotification. Since #ValentNotificaton is effectively ..."},{"type":"type_func","name":"get_default","type_name":"Clipboard","ident":"valent_clipboard_get_default","summary":"Get the default [class@Valent.Clipboard]."},{"type":"type_func","name":"get_default","type_name":"Contacts","ident":"valent_contacts_get_default","summary":"Get the default [class@Valent.Contacts]."},{"type":"type_func","name":"get_default","type_name":"Input","ident":"valent_input_get_default","summary":"Get the default [class@Valent.Input]."},{"type":"type_func","name":"get_default","type_name":"Media","ident":"valent_media_get_default","summary":"Get the default [class@Valent.Media]."},{"type":"type_func","name":"get_default","type_name":"Mixer","ident":"valent_mixer_get_default","summary":"Get the default [class@Valent.Mixer]."},{"type":"type_func","name":"get_default","type_name":"Notifications","ident":"valent_notifications_get_default","summary":"Get the default [class@Valent.Notifications]."},{"type":"type_func","name":"get_default","type_name":"Session","ident":"valent_session_get_default","summary":"Get the default [class@Valent.Session]."},{"type":"type_func","name":"get_directory","type_name":"Data","ident":"valent_data_get_directory","summary":"Returns the full path of a special directory using ..."},{"type":"type_func","name":"get_file","type_name":"Data","ident":"valent_data_get_file","summary":"A convenience for creating a [iface@Gio.File].  If @unique ..."},{"type":"type_func","name":"new","type_name":"DeviceManager","ident":"valent_device_manager_new","summary":"Asynchronously create a new #ValentDeviceManager.  When the manager ..."},{"type":"type_func","name":"set_device_action","type_name":"Notification","ident":"valent_notification_set_device_action","summary":"Set the default action for @notification. @action is wrapped ..."},{"type":"vfunc","name":"activate","type_name":"ApplicationPlugin","summary":"Handle activation of the application.  Implementations should override ..."},{"type":"vfunc","name":"add_contacts","type_name":"ContactStore","summary":"Add @contacts to @store.  Call [method@Valent.ContactStore.add_contacts_finish] to get ..."},{"type":"vfunc","name":"add_notification","type_name":"NotificationsAdapter","summary":"Send @notification to the @adapter."},{"type":"vfunc","name":"bind_extension","type_name":"Component","summary":"No description available."},{"type":"vfunc","name":"bind_preferred","type_name":"Component","summary":"No description available."},{"type":"vfunc","name":"build_identity","type_name":"ChannelService","summary":"Rebuild the local KDE Connect identity packet.  This ..."},{"type":"vfunc","name":"changed","type_name":"ClipboardAdapter","summary":"Emits [signal@Valent.ClipboardAdapter::changed] signal on @adapter.  The default handler ..."},{"type":"vfunc","name":"channel","type_name":"ChannelService","summary":"Emit [signal@Valent.ChannelService::channel] on @service.  This method should only ..."},{"type":"vfunc","name":"command_line","type_name":"ApplicationPlugin","summary":"Handle the given command-line options.  Implementations should override ..."},{"type":"vfunc","name":"contact_added","type_name":"ContactStore","summary":"Emits [signal@Valent.ContactStore::contact-added] signal on @store.  This method should ..."},{"type":"vfunc","name":"contact_removed","type_name":"ContactStore","summary":"Emits [signal@Valent.ContactStore::contact-removed] on @store.  This method should only ..."},{"type":"vfunc","name":"destroy","type_name":"Object","summary":"Destroy the object.  If called from the main ..."},{"type":"vfunc","name":"disable","type_name":"ApplicationPlugin","summary":"Disable the plugin.  Implementations should override this method ..."},{"type":"vfunc","name":"disable","type_name":"DevicePlugin","summary":"Disable the plugin.  This function is called when ..."},{"type":"vfunc","name":"download","type_name":"Channel","summary":"Open an auxiliary connection, usually to download data.  ..."},{"type":"vfunc","name":"download_async","type_name":"Channel","summary":"Open an auxiliary connection, usually to download data.  ..."},{"type":"vfunc","name":"download_finish","type_name":"Channel","summary":"Finish an operation started with [method@Valent.Channel.download_async]."},{"type":"vfunc","name":"enable","type_name":"ApplicationPlugin","summary":"Enable the plugin.  Implementations should override this method ..."},{"type":"vfunc","name":"enable","type_name":"DevicePlugin","summary":"Enable the plugin.  This function is called when ..."},{"type":"vfunc","name":"execute","type_name":"Transfer","summary":"Start the transfer operation.  Get the result with ..."},{"type":"vfunc","name":"execute_finish","type_name":"Transfer","summary":"Finish an operation started by [method@Valent.Transfer.execute]."},{"type":"vfunc","name":"export_player","type_name":"MediaAdapter","summary":"Export @player on @adapter.  This method is intended ..."},{"type":"vfunc","name":"get_active","type_name":"SessionAdapter","summary":"Get whether the session is active."},{"type":"vfunc","name":"get_contact","type_name":"ContactStore","summary":"Get a contact by UID.  Call [method@Valent.ContactStore.get_contact_finish] to ..."},{"type":"vfunc","name":"get_default_input","type_name":"MixerAdapter","summary":"Get the default input stream for @adapter."},{"type":"vfunc","name":"get_default_output","type_name":"MixerAdapter","summary":"Get the default output stream for @adapter."},{"type":"vfunc","name":"get_description","type_name":"MixerStream","summary":"Get the human-readable label of @stream."},{"type":"vfunc","name":"get_direction","type_name":"MixerStream","summary":"Get the port direction of @stream."},{"type":"vfunc","name":"get_flags","type_name":"MediaPlayer","summary":"Get flags describing the available actions of @player."},{"type":"vfunc","name":"get_level","type_name":"MixerStream","summary":"Get the level of @stream (eg. speaker volume, microphone ..."},{"type":"vfunc","name":"get_locked","type_name":"SessionAdapter","summary":"Get whether the session is locked."},{"type":"vfunc","name":"get_metadata","type_name":"MediaPlayer","summary":"Get the metadata of the active media items.  ..."},{"type":"vfunc","name":"get_mimetypes","type_name":"ClipboardAdapter","summary":"Get the mime-types of the current clipboard content."},{"type":"vfunc","name":"get_muted","type_name":"MixerStream","summary":"Get the muted state of @stream.  Implementations that ..."},{"type":"vfunc","name":"get_name","type_name":"MediaPlayer","summary":"Get the display name of the @player."},{"type":"vfunc","name":"get_name","type_name":"MixerStream","summary":"Get the unique name of @stream."},{"type":"vfunc","name":"get_position","type_name":"MediaPlayer","summary":"Get the current position in seconds."},{"type":"vfunc","name":"get_repeat","type_name":"MediaPlayer","summary":"Get the repeat mode for @player."},{"type":"vfunc","name":"get_shuffle","type_name":"MediaPlayer","summary":"Get whether playback order is shuffled."},{"type":"vfunc","name":"get_state","type_name":"MediaPlayer","summary":"Get the playback state for @player."},{"type":"vfunc","name":"get_timestamp","type_name":"ClipboardAdapter","summary":"Get the timestamp of the current clipboard content.  ..."},{"type":"vfunc","name":"get_verification_key","type_name":"Channel","summary":"Get a verification key for the connection.  Implementations ..."},{"type":"vfunc","name":"get_volume","type_name":"MediaPlayer","summary":"Get the volume level."},{"type":"vfunc","name":"handle_packet","type_name":"DevicePlugin","summary":"Handle a packet from the device the plugin is ..."},{"type":"vfunc","name":"identify","type_name":"ChannelService","summary":"Identify the host device to the network.  This ..."},{"type":"vfunc","name":"keyboard_keysym","type_name":"InputAdapter","summary":"Press or release @keysym."},{"type":"vfunc","name":"next","type_name":"MediaPlayer","summary":"Skip to the next media item.  If there ..."},{"type":"vfunc","name":"notification_added","type_name":"NotificationsAdapter","summary":"Emit [signal@Valent.NotificationsAdapter::notification-added] on @adapter.  This method should only ..."},{"type":"vfunc","name":"notification_removed","type_name":"NotificationsAdapter","summary":"Emit [signal@Valent.NotificationsAdapter::notification-removed] on @adapter.  This method should only ..."},{"type":"vfunc","name":"open","type_name":"ApplicationPlugin","summary":"Open the given files.  Implementations should override this ..."},{"type":"vfunc","name":"pause","type_name":"MediaPlayer","summary":"Pauses playback.  If playback is already paused, this ..."},{"type":"vfunc","name":"play","type_name":"MediaPlayer","summary":"Start playback.  If already playing, this has no ..."},{"type":"vfunc","name":"play_pause","type_name":"MediaPlayer","summary":"Start or pause playback, depending on the current state. ..."},{"type":"vfunc","name":"player_added","type_name":"MediaAdapter","summary":"Emit [signal@Valent.MediaAdapter::player-added] on @adapter.  This method should only ..."},{"type":"vfunc","name":"player_removed","type_name":"MediaAdapter","summary":"Emit [signal@Valent.MediaAdapter::player-removed] on @adapter.  This method should only ..."},{"type":"vfunc","name":"pointer_axis","type_name":"InputAdapter","summary":"Scroll the surface under the pointer (@dx, @dy), relative ..."},{"type":"vfunc","name":"pointer_button","type_name":"InputAdapter","summary":"Press or release @button."},{"type":"vfunc","name":"pointer_motion","type_name":"InputAdapter","summary":"Move the pointer (@dx, @dy), relative to its current ..."},{"type":"vfunc","name":"previous","type_name":"MediaPlayer","summary":"Skip to the previous media item.  If there ..."},{"type":"vfunc","name":"query","type_name":"ContactStore","summary":"Query @store for contacts matching @query.  Call [method@Valent.ContactStore.query_finish] ..."},{"type":"vfunc","name":"read_bytes","type_name":"ClipboardAdapter","summary":"Get the content of @adapter.  Call [method@Valent.ClipboardAdapter.read_bytes_finish] to ..."},{"type":"vfunc","name":"read_bytes_finish","type_name":"ClipboardAdapter","summary":"Finish an operation started by [method@Valent.ClipboardAdapter.read_bytes]."},{"type":"vfunc","name":"read_text","type_name":"ClipboardAdapter","summary":"Get the text content of @adapter.  Call [method@Valent.ClipboardAdapter.read_text_finish] ..."},{"type":"vfunc","name":"read_text_finish","type_name":"ClipboardAdapter","summary":"Finish an operation started by [method@Valent.ClipboardAdapter.read_text]."},{"type":"vfunc","name":"remove_contacts","type_name":"ContactStore","summary":"Remove contact @uid from @store.  Call [method@Valent.ContactStore.remove_contacts_finish] to ..."},{"type":"vfunc","name":"remove_notification","type_name":"NotificationsAdapter","summary":"Withdraw @id from @adapter."},{"type":"vfunc","name":"seek","type_name":"MediaPlayer","summary":"Seek in the current media item by @offset seconds. ..."},{"type":"vfunc","name":"set_default_input","type_name":"MixerAdapter","summary":"Set the default input stream for @adapter to @stream."},{"type":"vfunc","name":"set_default_output","type_name":"MixerAdapter","summary":"Set the default output stream for @adapter to @stream."},{"type":"vfunc","name":"set_level","type_name":"MixerStream","summary":"Set the level of @stream (eg. speaker volume, microphone ..."},{"type":"vfunc","name":"set_locked","type_name":"SessionAdapter","summary":"Set whether the session is locked."},{"type":"vfunc","name":"set_muted","type_name":"MixerStream","summary":"Set the muted state of @stream.  Implementations that ..."},{"type":"vfunc","name":"set_position","type_name":"MediaPlayer","summary":"Set the current position in seconds."},{"type":"vfunc","name":"set_repeat","type_name":"MediaPlayer","summary":"Set the repeat mode of @player to @repeat."},{"type":"vfunc","name":"set_shuffle","type_name":"MediaPlayer","summary":"Set whether playback order is shuffled."},{"type":"vfunc","name":"set_volume","type_name":"MediaPlayer","summary":"Set the volume level of @player."},{"type":"vfunc","name":"stop","type_name":"MediaPlayer","summary":"Stop playback.  If playback is already stopped, this ..."},{"type":"vfunc","name":"store_added","type_name":"ContactsAdapter","summary":"Emit [signal@Valent.ContactsAdapter::store-added] on @adapter.  This method should only ..."},{"type":"vfunc","name":"store_data","type_name":"Channel","summary":"Store channel metadata.  This method is called to ..."},{"type":"vfunc","name":"store_removed","type_name":"ContactsAdapter","summary":"Emit [signal@Valent.ContactsAdapter::store-removed] on @adapter.  This method should only ..."},{"type":"vfunc","name":"stream_added","type_name":"MixerAdapter","summary":"Emit [signal@Valent.MixerAdapter::stream-added] on @adapter.  This method should only ..."},{"type":"vfunc","name":"stream_removed","type_name":"MixerAdapter","summary":"Emit [signal@Valent.MixerAdapter::stream-removed] on @adapter.  This method should only ..."},{"type":"vfunc","name":"unbind_extension","type_name":"Component","summary":"No description available."},{"type":"vfunc","name":"unexport_player","type_name":"MediaAdapter","summary":"Unexport @player from @adapter."},{"type":"vfunc","name":"update_state","type_name":"DevicePlugin","summary":"Update the plugin based on the new state of ..."},{"type":"vfunc","name":"upload","type_name":"Channel","summary":"Accept an auxiliary connection, usually to upload data.  ..."},{"type":"vfunc","name":"upload_async","type_name":"Channel","summary":"Accept an auxiliary connection, usually to upload data.  ..."},{"type":"vfunc","name":"upload_finish","type_name":"Channel","summary":"Finish an operation started with [method@Valent.Channel.upload_async]."},{"type":"vfunc","name":"write_bytes","type_name":"ClipboardAdapter","summary":"Set the content of the clipboard.  Call [method@Valent.ClipboardAdapter.write_bytes_finish] ..."},{"type":"vfunc","name":"write_bytes_finish","type_name":"ClipboardAdapter","summary":"Finish an operation started by [method@Valent.ClipboardAdapter.write_bytes]."},{"type":"vfunc","name":"write_text","type_name":"ClipboardAdapter","summary":"Set the text content of the clipboard.  Call ..."},{"type":"vfunc","name":"write_text_finish","type_name":"ClipboardAdapter","summary":"Finish an operation started by [method@Valent.ClipboardAdapter.write_text]."}],"terms":{}}